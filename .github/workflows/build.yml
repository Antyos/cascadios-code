# This is a basic workflow to help you get started with Actions

name: Build-Font

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  get_version:
    name: Get the CalVer version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.calver.outputs.calver }}
    steps:
      - name: Get Tags
        uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/{owner}/{repo}/releases/latest
          owner: Antyos
          repo: cascadia-code
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get latest tag
        id: get_latest_tag
        run: |
          echo "::set-output name=latest_tag::${{ fromJson(steps.get_latest_release.outputs.data).tag_name }}"
          
      - name: Get CalVer version
        id: calver
        run: |
          # Get the latest tagged version
          LAST_VERSION=${{ steps.get_latest_tag.outputs.latest_tag }}
          # Remove the 'v' from the beginning of the tag (because it breaks the pattern)
          LAST_VERSION_NO_V=${LAST_VERSION#'v'}
          # Get the next CalVer version 
          NEXT_VERSION=$(docker run --rm relizaio/versioning -s YY0M.0D.Micro -v $LAST_VERSION_NO_V -a bump)
          # Output the version
          echo "::set-output name=calver::$NEXT_VERSION"


  # Build font (Same as .azure-pipelines.yml)
  build:
    name: Build Font
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8
      
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ttfautohint
          pip install -r requirements.txt ufolint
          
      - name: Lint sources
        run: ufolint sources/*.ufo
      
      # Build fonts with:
      #   - Web fonts
      #   - No mono fonts (the whole point of this is having custom ligatures)
      #   - Variable fonts only
      - name: Build fonts
        run: python ./build.py -W -M
          
      - name: Upload font artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: Cascadios
          path: build/
  


  publish:
    name: Publish release of font files
    needs: [ get_version, build ]
    runs-on: ubuntu-latest
    steps:
      - name: Download patched fonts
        uses: actions/download-artifact@v2.0.10
        with:
          name: Cascadios
          path: cascadios/
      - name: Zip font files
        run: |
          cd cascadios
          zip ../cascadios-${{ needs.get_version.outputs.version }}.zip *
          cd ..

      - name: Create tag
        uses: mathieudutour/github-tag-action@v6.0
        id: tag_version
        with:
          github_token: ${{ github.token }}
          custom_tag: ${{ needs.get_version.outputs.version }}

      - name: Create release
        uses: softprops/action-gh-release@v0.1.14
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          files: |
            cascadios-*.zip
